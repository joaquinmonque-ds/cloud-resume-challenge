name: Backend CI (Python + SAM)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      # Locate key files dynamically so we don't depend on exact paths
      - name: Locate project paths
        id: locate
        shell: bash
        run: |
          set -e
          echo "Scanning for files..."
          REQS=$(find . -maxdepth 6 -type f -name 'requirements-dev.txt' | head -n1)
          TEMPLATE=$(find . -maxdepth 6 -type f -name 'template.yaml' | head -n1)
          GET_DIR=$(dirname "$(find . -maxdepth 6 -type f -name 'get_function.py' | head -n1)")
          PUT_DIR=$(dirname "$(find . -maxdepth 6 -type f -name 'put_function.py' | head -n1)")

          # Provide fallbacks
          [ -z "$REQS" ] && echo "No requirements-dev.txt found, will install pytest/moto/boto3 directly."
          [ -z "$TEMPLATE" ] && { echo "ERROR: template.yaml not found"; exit 1; }

          echo "REQS=$REQS"       >> $GITHUB_ENV
          echo "TEMPLATE=$TEMPLATE" >> $GITHUB_ENV
          echo "GET_DIR=$GET_DIR" >> $GITHUB_ENV
          echo "PUT_DIR=$PUT_DIR" >> $GITHUB_ENV

          echo "Found:"
          echo "  REQS     = $REQS"
          echo "  TEMPLATE = $TEMPLATE"
          echo "  GET_DIR  = $GET_DIR"
          echo "  PUT_DIR  = $PUT_DIR"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dev dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -n "$REQS" ]; then
            pip install -r "$REQS"
          else
            pip install pytest "moto[dynamodb]>=5" boto3
          fi

      - name: Run tests (if any)
        shell: bash
        run: |
          # Make Lambda modules importable
          export PYTHONPATH="${GET_DIR:-.}:${PUT_DIR:-.}"
          # Run tests only if at least one exists
          if find . -maxdepth 6 -type f -path "*/tests/*.py" | grep -q .; then
            pytest -q
          else
            echo "No tests found; skipping."
          fi

      - name: Install SAM CLI
        shell: bash
        run: |
          python -m pip install --upgrade pipx
          pipx ensurepath
          pipx install aws-sam-cli
          sam --version

      - name: Validate SAM
        run: sam validate -t "$TEMPLATE"

      - name: Build SAM
        run: sam build -t "$TEMPLATE"
